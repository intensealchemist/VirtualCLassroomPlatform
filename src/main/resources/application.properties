# H2 Database Configuration (Development)
spring.datasource.url=jdbc:h2:mem:virtualclassroom
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.main.allow-bean-definition-overriding=true

# Disable problematic features temporarily
spring.jpa.defer-datasource-initialization=true
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN

# MySQL Configuration (commented out for now, using H2 instead)
# spring.datasource.url=jdbc:mysql://localhost:3306/user_db
# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASSWORD}
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

server.port=8080

# File Upload Configuration
file.upload-dir=${UPLOAD_DIR:D:/VirtualCLass-1/src/main/resources/static/vid}

# JWT Configuration
jwt.expiration=86400000
jwt.secret=VirtualClassroomSecretKeyForJWTTokenGeneration2024

# API Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Stabilize spring-boot:run behavior on Windows
spring.devtools.restart.enabled=false

# App base URL for email links
app.base-url=http://localhost:8080
app.mail.from=noreply@virtualclassroom.com

# Email feature flag (disable to avoid connection errors in dev)
app.mail.enabled=false

# Spring Mail (configure for local mail catcher like smtp4dev/MailHog)
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:google-client-secret}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.config.import=optional:file:.env[.properties]

# Agora RTC Configuration
# Set these in application.properties or via environment variables
# Example env vars: AGORA_APP_ID, AGORA_APP_CERTIFICATE
agora.app-id=${AGORA_APP_ID:}
agora.app-certificate=${AGORA_APP_CERTIFICATE:}
# Token validity in seconds (default 1 hour)
agora.token.expire-seconds=${AGORA_TOKEN_EXPIRE_SECONDS:3600}